// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç API –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
async function testPublicAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...\n');

  try {
    // –¢–µ—Å—Ç Health Check
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ health check...');
    const healthResponse = await fetch('http://localhost:8880/health');
    if (healthResponse.ok) {
      const healthData = await healthResponse.json();
      console.log('‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthData.status);
    }

    // –¢–µ—Å—Ç –ø—É–±–ª–∏—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    console.log('\nüì∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...');
    const newsResponse = await fetch('http://localhost:8880/api/news/public');
    
    if (newsResponse.ok) {
      const newsData = await newsResponse.json();
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—É–±–ª–∏—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: ${newsData.news?.length || 0}`);
      
      if (newsData.news?.length > 0) {
        console.log(`üìÑ –ü–µ—Ä–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å: "${newsData.news[0].title}"`);
      }
    } else {
      console.log('‚ö†Ô∏è –ü—É–±–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:', newsResponse.status, newsResponse.statusText);
    }

    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–æ–∫ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401 –±–µ–∑ —Ç–æ–∫–µ–Ω–∞)
    console.log('\nüìß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ —Ä–∞—Å—Å—ã–ª–æ–∫...');
    const newslettersResponse = await fetch('http://localhost:8880/api/newsletters');
    
    if (newslettersResponse.status === 401) {
      console.log('‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞—Å—Å—ã–ª–æ–∫ –∑–∞—â–∏—â–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)');
    } else {
      console.log('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞:', newslettersResponse.status);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testPublicAPI();
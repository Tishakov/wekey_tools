import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useNewsletters } from '../../../hooks/useNewslettersAndNews';
import './EmailTemplates.css';

interface Newsletter {
  id: number;
  title: string;
  subject: string;
  status: string;
  type: string;
  isSystem: boolean;
  content: string;
  createdAt: string;
  updatedAt: string;
}

type FilterType = 'all' | 'system' | 'custom';

const EmailTemplates: React.FC = () => {
  const navigate = useNavigate();
  const { newsletters, loading, fetchNewsletters, deleteNewsletter } = useNewsletters();
  const [filter, setFilter] = useState<FilterType>('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [deleteModalId, setDeleteModalId] = useState<number | null>(null);

  useEffect(() => {
    fetchNewsletters();
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–∏—Å–µ–º
  const filteredNewsletters = newsletters.filter((newsletter: Newsletter) => {
    const matchesSearch = newsletter.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         newsletter.subject?.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesFilter = 
      filter === 'all' ? true :
      filter === 'system' ? newsletter.isSystem :
      filter === 'custom' ? !newsletter.isSystem : true;
    
    return matchesSearch && matchesFilter;
  });

  // –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ
  const systemEmails = filteredNewsletters.filter((n: Newsletter) => n.isSystem);
  const customTemplates = filteredNewsletters.filter((n: Newsletter) => !n.isSystem);

  const handleDelete = async (id: number) => {
    try {
      await deleteNewsletter(id);
      setDeleteModalId(null);
      fetchNewsletters();
    } catch (error) {
      console.error('Error deleting newsletter:', error);
    }
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleString('ru-RU', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const getSystemEmailDescription = (type: string) => {
    const descriptions: Record<string, string> = {
      system_welcome: '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email',
      system_password_reset: '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è',
      system_verification: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞',
      system_balance_refill: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –∫–æ–∏–Ω–æ–≤'
    };
    return descriptions[type] || '–°–∏—Å—Ç–µ–º–Ω–æ–µ –ø–∏—Å—å–º–æ';
  };

  return (
    <div className="email-templates-container">
      {/* Filters and Search */}
      <div className="templates-toolbar">
        <div className="toolbar-left">
          <div className="filter-buttons">
            <button 
              className={`filter-btn ${filter === 'all' ? 'active' : ''}`}
              onClick={() => setFilter('all')}
            >
              –í—Å–µ –ø–∏—Å—å–º–∞
              <span className="count-badge">{newsletters.length}</span>
            </button>
            <button 
              className={`filter-btn ${filter === 'system' ? 'active' : ''}`}
              onClick={() => setFilter('system')}
            >
              ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ
              <span className="count-badge">{systemEmails.length}</span>
            </button>
            <button 
              className={`filter-btn ${filter === 'custom' ? 'active' : ''}`}
              onClick={() => setFilter('custom')}
            >
              üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ
              <span className="count-badge">{customTemplates.length}</span>
            </button>
          </div>
          <div className="search-box">
            <input
              type="text"
              placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ —Ç–µ–º–µ..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="search-input"
            />
          </div>
        </div>
        <div className="toolbar-right">
          <button 
            className="create-template-btn"
            onClick={() => navigate('/admin/newsletters/create')}
          >
            ‚ûï –°–æ–∑–¥–∞—Ç—å –ø–∏—Å—å–º–æ
          </button>
        </div>
      </div>

      {/* Loading State */}
      {loading && (
        <div className="loading-state">
          <div className="spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∏—Å–µ–º...</p>
        </div>
      )}

      {/* System Emails Section */}
      {!loading && (filter === 'all' || filter === 'system') && systemEmails.length > 0 && (
        <div className="templates-section">
          <div className="section-header">
            <h2>‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∏—Å—å–º–∞</h2>
            <p className="section-description">
              –≠—Ç–∏ –ø–∏—Å—å–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö. 
              –í—ã –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –Ω–æ –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å.
            </p>
          </div>
          <div className="templates-grid">
            {systemEmails.map((email: Newsletter) => (
              <div key={email.id} className="template-card system-template">
                <div className="template-header">
                  <div className="template-icon">‚öôÔ∏è</div>
                  <span className="system-badge">–°–∏—Å—Ç–µ–º–Ω–æ–µ</span>
                </div>
                <div className="template-body">
                  <h3 className="template-title">{email.title}</h3>
                  <p className="template-subject">{email.subject}</p>
                  <p className="template-description">
                    {getSystemEmailDescription(email.type)}
                  </p>
                  <div className="template-meta">
                    <span className="meta-item">
                      üìù –ò–∑–º–µ–Ω–µ–Ω–æ: {formatDate(email.updatedAt)}
                    </span>
                  </div>
                </div>
                <div className="template-actions">
                  <button 
                    className="action-btn preview-btn"
                    title="–ü—Ä–æ—Å–º–æ—Ç—Ä"
                    onClick={() => navigate(`/admin/newsletters/preview/${email.id}`)}
                  >
                    üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä
                  </button>
                  <button 
                    className="action-btn edit-btn"
                    onClick={() => navigate(`/admin/newsletters/edit/${email.id}`)}
                  >
                    ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Custom Templates Section */}
      {!loading && (filter === 'all' || filter === 'custom') && customTemplates.length > 0 && (
        <div className="templates-section">
          <div className="section-header">
            <h2>üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã</h2>
            <p className="section-description">
              –í–∞—à–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –ø–∏—Å–µ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫
            </p>
          </div>
          <div className="templates-grid">
            {customTemplates.map((template: Newsletter) => (
              <div key={template.id} className="template-card custom-template">
                <div className="template-header">
                  <div className="template-icon">üìù</div>
                  <span className={`status-badge status-${template.status}`}>
                    {template.status === 'draft' ? '–ß–µ—Ä–Ω–æ–≤–∏–∫' : 
                     template.status === 'active' ? '–ê–∫—Ç–∏–≤–µ–Ω' : template.status}
                  </span>
                </div>
                <div className="template-body">
                  <h3 className="template-title">{template.title}</h3>
                  <p className="template-subject">{template.subject}</p>
                  <div className="template-preview">
                    {template.content.substring(0, 120)}...
                  </div>
                  <div className="template-meta">
                    <span className="meta-item">
                      üìÖ –°–æ–∑–¥–∞–Ω–æ: {formatDate(template.createdAt)}
                    </span>
                  </div>
                </div>
                <div className="template-actions">
                  <button 
                    className="action-btn preview-btn"
                    title="–ü—Ä–æ—Å–º–æ—Ç—Ä"
                    onClick={() => navigate(`/admin/newsletters/preview/${template.id}`)}
                  >
                    üëÅÔ∏è
                  </button>
                  <button 
                    className="action-btn edit-btn"
                    onClick={() => navigate(`/admin/newsletters/edit/${template.id}`)}
                  >
                    ‚úèÔ∏è
                  </button>
                  <button 
                    className="action-btn duplicate-btn"
                    title="–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å"
                  >
                    üìã
                  </button>
                  <button 
                    className="action-btn delete-btn"
                    title="–£–¥–∞–ª–∏—Ç—å"
                    onClick={() => setDeleteModalId(template.id)}
                  >
                    üóëÔ∏è
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Empty State */}
      {!loading && filteredNewsletters.length === 0 && (
        <div className="empty-state">
          <div className="empty-icon">üì≠</div>
          <h3>–ü–∏—Å—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>
            {searchTerm 
              ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
              : filter === 'system'
              ? '–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∏—Å—å–º–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã'
              : '–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã'
            }
          </p>
          {!searchTerm && filter === 'custom' && (
            <button 
              className="create-first-btn"
              onClick={() => navigate('/admin/newsletters/create')}
            >
              ‚ûï –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤–æ–µ –ø–∏—Å—å–º–æ
            </button>
          )}
        </div>
      )}

      {/* Delete Confirmation Modal */}
      {deleteModalId && (
        <div className="modal-overlay" onClick={() => setDeleteModalId(null)}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <h3>–£–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–æ?</h3>
            <p>–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –ü–∏—Å—å–º–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞.</p>
            <div className="modal-actions">
              <button 
                className="cancel-btn"
                onClick={() => setDeleteModalId(null)}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button 
                className="delete-confirm-btn"
                onClick={() => handleDelete(deleteModalId)}
              >
                üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default EmailTemplates;

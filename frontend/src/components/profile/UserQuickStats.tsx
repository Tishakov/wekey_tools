import React, { useState, useEffect } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import './UserQuickStats.css';

interface UserStats {
  totalToolUsage: number;
  uniqueToolsUsed: number;
  daysOnPlatform: number;
  tokensUsed: number;
}

const UserQuickStats: React.FC = () => {
  const { user } = useAuth();
  const [userStats, setUserStats] = useState<UserStats>({
    totalToolUsage: 0,
    uniqueToolsUsed: 0,
    daysOnPlatform: 0,
    tokensUsed: 0,
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const fetchUserStats = async () => {
      if (!user || !localStorage.getItem('wekey_token')) return;
      
      try {
        const response = await fetch('http://localhost:8880/api/auth/stats', {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('wekey_token')}`,
            'Content-Type': 'application/json'
          }
        });

        if (response.ok) {
          const result = await response.json();
          if (result.success && result.stats) {
            setUserStats(result.stats);
          }
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
      }
    };

    fetchUserStats();
  }, [user]);

  // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  const avgToolsPerDay = userStats.daysOnPlatform > 0 
    ? Math.round(userStats.totalToolUsage / userStats.daysOnPlatform * 10) / 10
    : 0;
  
  const avgCoinsPerTool = userStats.totalToolUsage > 0 
    ? Math.round(userStats.tokensUsed / userStats.totalToolUsage * 10) / 10
    : 0;
  
  const toolsExplored = userStats.uniqueToolsUsed;
  const totalTools = 31; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
  const explorationPercent = Math.round((toolsExplored / totalTools) * 100);
  
  const getUserLevel = () => {
    if (toolsExplored < 5) return { level: '–ù–æ–≤–∏—á–æ–∫', color: '#64B5F6', progress: Math.min((toolsExplored / 5) * 100, 100) };
    if (toolsExplored < 15) return { level: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å', color: '#81C784', progress: Math.min(((toolsExplored - 5) / 10) * 100, 100) };
    if (toolsExplored < 25) return { level: '–≠–∫—Å–ø–µ—Ä—Ç', color: '#FFB74D', progress: Math.min(((toolsExplored - 15) / 10) * 100, 100) };
    if (toolsExplored === 31) return { level: '–ú–∞—Å—Ç–µ—Ä', color: '#E57373', progress: 100 };
    return { level: '–ü—Ä–æ—Ñ–∏', color: '#BA68C8', progress: Math.min(((toolsExplored - 25) / 6) * 100, 100) };
  };
  
  const userLevel = getUserLevel();
  
  const getEfficiencyLevel = () => {
    if (avgCoinsPerTool <= 2) return { level: '–≠–∫–æ–Ω–æ–º–Ω—ã–π', color: '#4CAF50' };
    if (avgCoinsPerTool <= 4) return { level: '–£–º–µ—Ä–µ–Ω–Ω—ã–π', color: '#FF9800' };
    return { level: '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π', color: '#F44336' };
  };
  
  const efficiencyLevel = getEfficiencyLevel();

  if (!user) {
    return (
      <div className="dashboard-error">
        –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
      </div>
    );
  }

  return (
    <div className="user-dashboard">
      {/* –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="dashboard-quick-stats">
        <h2>‚ö° –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
        <div className="dashboard-quick-stats-grid">
          
          {/* –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
          <div className="dashboard-quick-stat">
            <div className="stat-icon">üìä</div>
            <div className="stat-content">
              <span className="dashboard-quick-stat-label">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –¥–µ–Ω—å</span>
              <span className="dashboard-quick-stat-value">{avgToolsPerDay} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</span>
              <div className="stat-subtext">
                {avgToolsPerDay < 1 ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤' :
                 avgToolsPerDay < 3 ? '–•–æ—Ä–æ—à–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å' :
                 avgToolsPerDay < 5 ? '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å' : '–°—É–ø–µ—Ä –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!'}
              </div>
            </div>
          </div>

          {/* –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
          <div className="dashboard-quick-stat">
            <div className="stat-icon">üí∞</div>
            <div className="stat-content">
              <span className="dashboard-quick-stat-label">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
              <span className="dashboard-quick-stat-value" style={{ color: efficiencyLevel.color }}>
                {efficiencyLevel.level}
              </span>
              <div className="stat-subtext">{avgCoinsPerTool} –∫–æ–∏–Ω–æ–≤ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç</div>
            </div>
          </div>

          {/* –£—Ä–æ–≤–µ–Ω—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º */}
          <div className="dashboard-quick-stat">
            <div className="stat-icon">üéØ</div>
            <div className="stat-content">
              <span className="dashboard-quick-stat-label">–£—Ä–æ–≤–µ–Ω—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</span>
              <span className="dashboard-quick-stat-value" style={{ color: userLevel.color }}>
                {userLevel.level}
              </span>
              <div className="stat-progress">
                <div className="progress-bar">
                  <div 
                    className="progress-fill" 
                    style={{ 
                      width: `${userLevel.progress}%`,
                      backgroundColor: userLevel.color 
                    }}
                  ></div>
                </div>
                <div className="stat-subtext">{toolsExplored} –∏–∑ {totalTools} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ ({explorationPercent}%)</div>
              </div>
            </div>
          </div>

          {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="dashboard-quick-stat">
            <div className="stat-icon">üìà</div>
            <div className="stat-content">
              <span className="dashboard-quick-stat-label">–ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</span>
              <span className="dashboard-quick-stat-value">{userStats.daysOnPlatform} –¥–Ω–µ–π</span>
              <div className="stat-subtext">
                –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {userStats.totalToolUsage} ‚Ä¢ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∫–æ–∏–Ω–æ–≤: {userStats.tokensUsed}
              </div>
            </div>
          </div>

          {/* –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –¥–Ω—è */}
          <div className="dashboard-quick-stat achievement">
            <div className="stat-icon">üèÜ</div>
            <div className="stat-content">
              <span className="dashboard-quick-stat-label">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –¥–Ω—è</span>
              <span className="dashboard-quick-stat-value">
                {userStats.uniqueToolsUsed >= 31 ? '–ú–∞—Å—Ç–µ—Ä –≤—Å–µ—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤!' :
                 userStats.totalToolUsage >= 100 ? '–ê–∫—Ç–∏–≤–Ω—ã–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å!' :
                 userStats.daysOnPlatform >= 30 ? '–í–µ—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!' :
                 avgToolsPerDay >= 5 ? '–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å!' :
                 userStats.uniqueToolsUsed >= 10 ? '–õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π!' : '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å!'}
              </span>
            </div>
          </div>

        </div>
      </div>
    </div>
  );
};

export default UserQuickStats;
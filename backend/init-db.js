const db = require('./src/config/database');
const bcrypt = require('bcryptjs');

async function initDatabase() {
  try {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    await db.sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π —Å –ë–î (—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü)
    await db.sequelize.sync({ force: true }); // force: true —É–¥–∞–ª—è–µ—Ç –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã');

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    const hashedPassword = await bcrypt.hash('admin123', 12);
    
    const admin = await db.User.create({
      email: 'admin@wekey.tools',
      password: hashedPassword,
      firstName: 'Admin',
      lastName: 'Wekey',
      role: 'admin',
      status: 'active',
      emailVerified: true,
      dailyApiLimit: 10000
    });

    console.log('‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω:');
    console.log('   ID:', admin.id);
    console.log('   Email:', admin.email);
    console.log('   Role:', admin.role);

    // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –∞–¥–º–∏–Ω–∞
    await db.Subscription.create({
      userId: admin.id,
      planType: 'admin',
      status: 'active',
      dailyApiLimit: 10000,
      aiToolsAccess: true,
      customBranding: true,
      prioritySupport: true,
      startDate: new Date(),
      price: 0,
      currency: 'USD',
      billingCycle: 'lifetime'
    });

    console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUser = await db.User.create({
      email: 'test@example.com',
      password: await bcrypt.hash('test123', 12),
      firstName: 'Test',
      lastName: 'User',
      role: 'user',
      status: 'active',
      emailVerified: true,
      dailyApiLimit: 100
    });

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
    await db.Subscription.create({
      userId: testUser.id,
      planType: 'free',
      status: 'active',
      dailyApiLimit: 100,
      aiToolsAccess: false,
      customBranding: false,
      prioritySupport: false,
      startDate: new Date(),
      price: 0,
      currency: 'USD',
      billingCycle: 'monthly'
    });

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    const toolUsages = [
      { userId: testUser.id, toolName: 'synonym-generator', count: 15 },
      { userId: testUser.id, toolName: 'text-generator', count: 8 },
      { userId: admin.id, toolName: 'case-changer', count: 25 },
      { userId: admin.id, toolName: 'transliteration', count: 12 }
    ];

    for (const usage of toolUsages) {
      await db.ToolUsage.create(usage);
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω—ã');

    console.log('');
    console.log('üéØ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('   Admin Email: admin@wekey.tools');
    console.log('   Admin Password: admin123');
    console.log('   Test Email: test@example.com');
    console.log('   Test Password: test123');
    
    await db.sequelize.close();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î:', error.message);
    console.error(error);
  }
}

initDatabase();
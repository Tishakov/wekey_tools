const { ToolUsage } = require('./src/config/database');

async function checkSeoAuditTools() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SEO –∞—É–¥–∏—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ seo-audit-pro
    const seoAuditPro = await ToolUsage.findAll({
      attributes: [
        [require('sequelize').fn('COUNT', require('sequelize').col('id')), 'usageCount']
      ],
      where: { toolName: 'seo-audit-pro' },
      raw: true
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ seoauditpro
    const seoauditpro = await ToolUsage.findAll({
      attributes: [
        [require('sequelize').fn('COUNT', require('sequelize').col('id')), 'usageCount']
      ],
      where: { toolName: 'seoauditpro' },
      raw: true
    });

    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log(`üîß seo-audit-pro: ${seoAuditPro[0]?.usageCount || 0} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π`);
    console.log(`üîß seoauditpro: ${seoauditpro[0]?.usageCount || 0} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π`);

    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ –ø—Ä–æ—Å—Ç–æ seo-audit
    const seoAudit = await ToolUsage.findAll({
      attributes: [
        [require('sequelize').fn('COUNT', require('sequelize').col('id')), 'usageCount']
      ],
      where: { toolName: 'seo-audit' },
      raw: true
    });

    console.log(`üîß seo-audit: ${seoAudit[0]?.usageCount || 0} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π`);

    // –ü–æ–ª—É—á–∏–º –ø—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
    console.log('\nüîç –ü–†–ò–ú–ï–†–´ –ó–ê–ü–ò–°–ï–ô:');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');

    if (parseInt(seoAuditPro[0]?.usageCount) > 0) {
      const examplePro = await ToolUsage.findOne({
        where: { toolName: 'seo-audit-pro' },
        order: [['createdAt', 'DESC']]
      });
      console.log(`üìÖ seo-audit-pro –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑: ${examplePro?.createdAt}`);
    }

    if (parseInt(seoauditpro[0]?.usageCount) > 0) {
      const exampleAuditpro = await ToolUsage.findOne({
        where: { toolName: 'seoauditpro' },
        order: [['createdAt', 'DESC']]
      });
      console.log(`üìÖ seoauditpro –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑: ${exampleAuditpro?.createdAt}`);
    }

    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:');
    const proCount = parseInt(seoAuditPro[0]?.usageCount) || 0;
    const auditproCount = parseInt(seoauditpro[0]?.usageCount) || 0;
    
    if (proCount > auditproCount) {
      console.log('‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–∞–≤–∏—Ç—å: seo-audit-pro');
      console.log('‚ùå –£–¥–∞–ª–∏—Ç—å: seoauditpro');
    } else if (auditproCount > proCount) {
      console.log('‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–∞–≤–∏—Ç—å: seoauditpro');
      console.log('‚ùå –£–¥–∞–ª–∏—Ç—å: seo-audit-pro');
    } else {
      console.log('‚ö†Ô∏è –û–±–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ');
      console.log('üí≠ –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫–æ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–º –∫–æ–¥–µ frontend');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error);
  } finally {
    process.exit(0);
  }
}

checkSeoAuditTools();
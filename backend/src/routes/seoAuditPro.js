const express = require('express');
const router = express.Router();
const GoogleSearchConsoleService = require('../services/GoogleSearchConsoleService');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GSC —Å–µ—Ä–≤–∏—Å–∞
const gscService = new GoogleSearchConsoleService();

// OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è GSC
router.get('/seo-audit-pro/auth', async (req, res) => {
  try {
    const authUrl = gscService.generateAuthUrl();
    res.json({
      success: true,
      authUrl: authUrl
    });
  } catch (error) {
    console.error('GSC Auth URL generation error:', error);
    res.status(500).json({
      success: false,
      error: 'Failed to generate authorization URL'
    });
  }
});

// OAuth callback –¥–ª—è GSC –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ /auth/google/callback —á–µ—Ä–µ–∑ oauth.js

// API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ –∫–æ–¥—É
router.post('/seo-audit-pro/exchange-token', async (req, res) => {
  try {
    const { code } = req.body;
    
    if (!code) {
      return res.status(400).json({
        success: false,
        error: 'Authorization code is required'
      });
    }

    const tokens = await gscService.getTokensFromCode(code);
    
    res.json({
      success: true,
      tokens: tokens,
      message: 'Successfully connected to Google Search Console'
    });
  } catch (error) {
    console.error('GSC token exchange error:', error);
    res.status(500).json({
      success: false,
      error: 'Failed to exchange code for tokens'
    });
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤ (GET - –¥–ª—è –¥–µ–º–æ)
router.get('/seo-audit-pro/sites', async (req, res) => {
  try {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å–∞–π—Ç–æ–≤ –∏–∑ GSC (–≤–∫–ª—é—á–∞—è –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Å–∞–π—Ç)
    res.json({ 
      success: true, 
      sites: [
        { siteUrl: 'https://wekey.tools/', permissionLevel: 'siteOwner' },
        { siteUrl: 'https://example.com/', permissionLevel: 'siteOwner' },
        { siteUrl: 'https://mywebsite.com/', permissionLevel: 'siteOwner' },
        { siteUrl: 'https://testsite.org/', permissionLevel: 'siteFullUser' },
        { siteUrl: 'https://blog.example.com/', permissionLevel: 'siteOwner' }
      ],
      isDemo: true
    });
  } catch (error) {
    console.error('Error fetching sites:', error);
    res.status(500).json({ 
      success: false, 
      error: 'Failed to fetch sites'
    });
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤ (POST - —Å —Ç–æ–∫–µ–Ω–∞–º–∏)
router.post('/seo-audit-pro/sites', async (req, res) => {
  try {
    const { tokens } = req.body;

    if (!tokens) {
      return res.status(400).json({
        success: false,
        error: 'Access tokens are required'
      });
    }

    gscService.setCredentials(tokens);
    const sites = await gscService.getSites();

    res.json({
      success: true,
      sites: sites
    });
  } catch (error) {
    console.error('GSC Sites fetch error:', error);
    
    // –ï—Å–ª–∏ API –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º demo –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
    if (error.message && error.message.includes('API has not been used')) {
      return res.json({
        success: true,
        sites: [
          { siteUrl: 'https://wekey.tools/', permissionLevel: 'siteOwner' },
          { siteUrl: 'https://example.com/', permissionLevel: 'siteOwner' },
          { siteUrl: 'https://mywebsite.com/', permissionLevel: 'siteOwner' }
        ],
        isDemo: true,
        message: 'Search Console API –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ.',
        apiActivationUrl: 'https://console.developers.google.com/apis/api/searchconsole.googleapis.com/overview?project=751826217400'
      });
    }
    
    res.status(500).json({
      success: false,
      error: 'Failed to fetch sites from Google Search Console'
    });
  }
});

// SEO Audit PRO –∞–Ω–∞–ª–∏–∑ (–Ω–æ–≤—ã–π endpoint)
router.post('/seo-audit-pro/analyze', async (req, res) => {
  try {
    const { website, tokens, useMockData } = req.body;

    if (!website) {
      return res.status(400).json({
        success: false,
        error: 'Website URL is required'
      });
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω—ã –∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ, –¥–µ–ª–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    if (tokens && !useMockData) {
      try {
        console.log('üîç Analyzing real GSC data for:', website);
        const analysis = await gscService.analyzeSite(website, tokens);
        
        return res.json({
          success: true,
          analysis: analysis,
          source: 'real_gsc_data'
        });
      } catch (gscError) {
        console.error('Real GSC analysis failed:', gscError);
        return res.status(500).json({
          success: false,
          error: 'Failed to analyze GSC data: ' + gscError.message,
          source: 'gsc_api_error'
        });
      }
    }

    // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const mockData = {
      url: website,
      period: {
        startDate: '2024-08-28',
        endDate: '2024-09-25'
      },
      gscData: {
        searchPerformance: {
          totalClicks: 1250,
          totalImpressions: 15670,
          averageCTR: 7.98,
          averagePosition: 8.4,
          queries: [
            {
              query: '–≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—Ä–æ—Å',
              clicks: 342,
              impressions: 4521,
              ctr: 7.56,
              position: 6.2
            },
            {
              query: '–≤—Ç–æ—Ä–æ–π –≤–∞–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
              clicks: 187,
              impressions: 2890,
              ctr: 6.47,
              position: 9.1
            },
            {
              query: '–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
              clicks: 95,
              impressions: 2340,
              ctr: 4.06,
              position: 12.3
            }
          ],
          pages: [
            {
              page: `https://${website}/`,
              clicks: 456,
              impressions: 5234,
              ctr: 8.71,
              position: 7.3
            },
            {
              page: `https://${website}/about`,
              clicks: 234,
              impressions: 3456,
              ctr: 6.77,
              position: 8.9
            }
          ],
          devices: [
            {
              device: 'MOBILE',
              clicks: 750,
              impressions: 9402,
              ctr: 7.98,
              position: 8.1
            },
            {
              device: 'DESKTOP',
              clicks: 400,
              impressions: 4890,
              ctr: 8.18,
              position: 8.6
            },
            {
              device: 'TABLET',
              clicks: 100,
              impressions: 1378,
              ctr: 7.26,
              position: 9.2
            }
          ]
        },
        indexCoverage: {
          validPages: 142,
          errorPages: 7,
          excludedPages: 23,
          warnings: 3,
          status: 'verified'
        }
      },
      overallScore: 73,
      healthStatus: 'good',
      recommendations: [
        {
          priority: 'high',
          category: 'CTR Optimization',
          title: '–£–ª—É—á—à–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü —Å –Ω–∏–∑–∫–∏–º CTR',
          description: '–ù–∞–π–¥–µ–Ω–æ 5 —Å—Ç—Ä–∞–Ω–∏—Ü –≤ TOP-10 —Å CTR –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ',
          impact: '–í—ã—Å–æ–∫–∏–π - –º–æ–∂–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å —Ç—Ä–∞—Ñ–∏–∫ –Ω–∞ 25-40%',
          actionSteps: [
            '–î–æ–±–∞–≤—å—Ç–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –≤ title',
            '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–∞ –∏ —Å–∫–æ–±–∫–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö',
            '–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã meta-–æ–ø–∏—Å–∞–Ω–∏–π',
            '–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é –≤ —Å–Ω–∏–ø–ø–µ—Ç—ã'
          ]
        },
        {
          priority: 'high',
          category: 'Position Improvement',
          title: '–ü—Ä–æ–¥–≤–∏–Ω—å—Ç–µ 8 —Å—Ç—Ä–∞–Ω–∏—Ü –∏–∑ –ø–æ–∑–∏—Ü–∏–π 11-20 –≤ TOP-10',
          description: '–≠—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–ª–∏–∑–∫–∏ –∫ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞',
          impact: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π - –ø–æ–ø–∞–¥–∞–Ω–∏–µ –≤ TOP-10 —É–≤–µ–ª–∏—á–∏—Ç —Ç—Ä–∞—Ñ–∏–∫ –≤ 3-5 —Ä–∞–∑',
          actionSteps: [
            '–†–∞—Å—à–∏—Ä—å—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ 500-1000 —Å–ª–æ–≤',
            '–î–æ–±–∞–≤—å—Ç–µ FAQ —Å–µ–∫—Ü–∏–∏',
            '–£–ª—É—á—à–∏—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –ø–µ—Ä–µ–ª–∏–Ω–∫–æ–≤–∫—É',
            '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏'
          ]
        },
        {
          priority: 'medium',
          category: 'Technical SEO',
          title: '–ò—Å–ø—Ä–∞–≤—å—Ç–µ 7 –æ—à–∏–±–æ–∫ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏',
          description: 'Google –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–∞–∂–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
          impact: '–°—Ä–µ–¥–Ω–∏–π - –æ—Å–≤–æ–±–æ–¥–∏—Ç –∫—Ä–∞—É–ª–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç',
          actionSteps: [
            '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ robots.txt –∏ sitemap.xml',
            '–ò—Å–ø—Ä–∞–≤—å—Ç–µ 404 –æ—à–∏–±–∫–∏',
            '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã',
            '–û–±–Ω–æ–≤–∏—Ç–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏'
          ]
        },
        {
          priority: 'low',
          category: 'Mobile Optimization',
          title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
          description: '–ú–æ–±–∏–ª—å–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 60%, –Ω–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∏–∂–µ –¥–µ—Å–∫—Ç–æ–ø–∞',
          impact: '–°—Ä–µ–¥–Ω–∏–π - —É–ª—É—á—à–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç',
          actionSteps: [
            '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞',
            '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫ –∏ —Ñ–æ—Ä–º',
            '–£–ª—É—á—à–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö',
            '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —É–¥–æ–±—Å—Ç–≤–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏'
          ]
        }
      ]
    };

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –∞–Ω–∞–ª–∏–∑–∞
    setTimeout(() => {
      res.json({
        success: true,
        analysis: mockData,
        source: 'demo_data'
      });
    }, 3000);

  } catch (error) {
    console.error('SEO Audit PRO error:', error);
    res.status(500).json({
      success: false,
      error: 'Internal server error'
    });
  }
});

// –°—Ç–∞—Ä—ã–π endpoint –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
router.post('/seo-audit-pro', async (req, res) => {
  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–æ–≤—ã–π endpoint analyze
  const { website, tokens, useMockData } = req.body;
  
  if (!website) {
    return res.status(400).json({
      success: false,
      error: 'Website URL is required'
    });
  }

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ endpoint
  const mockData = {
    url: website,
    gscData: {
      searchPerformance: {
        totalClicks: 1250,
        totalImpressions: 15670,
        averageCTR: 7.98,
        averagePosition: 8.4,
        queries: [
          {
            query: '–≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—Ä–æ—Å',
            clicks: 342,
            impressions: 4521,
            ctr: 7.56,
            position: 6.2
          }
        ],
        pages: [
          {
            page: `https://${website}/`,
            clicks: 456,
            impressions: 5234,
            ctr: 8.71,
            position: 7.3
          }
        ]
      }
    },
    overallScore: 73,
    healthStatus: 'good',
    recommendations: []
  };

  setTimeout(() => {
    res.json({
      success: true,
      analysis: mockData
    });
  }, 3000);
});

module.exports = router;
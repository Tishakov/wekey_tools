const express = require('express');
const router = express.Router();
const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–µ–∑ Sequelize –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
router.get('/test/:id', (req, res) => {
  try {
    const { id } = req.params;
    const dbPath = path.join(__dirname, '../../database.sqlite');
    const db = new sqlite3.Database(dbPath);

    console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏ ID: ${id}`);
    
    db.get('SELECT * FROM newsletters WHERE id = ?', [id], (err, row) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ SQL:', err.message);
        return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', details: err.message });
      }

      if (!row) {
        return res.status(404).json({ error: '–†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' });
      }

      console.log('‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:', row.title);
      res.json(row);
      
      db.close();
    });
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
    res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', details: error.message });
  }
});

module.exports = router;
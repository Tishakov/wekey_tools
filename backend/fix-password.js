const db = require('./src/config/database');
const bcrypt = require('bcryptjs');

async function fixPassword() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∞...');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    await db.sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–µ—à
    const correctPassword = 'admin123';
    const correctHash = await bcrypt.hash(correctPassword, 12);
    console.log('üîë –ù–æ–≤—ã–π —Ö–µ—à —Å–æ–∑–¥–∞–Ω');

    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL, –º–∏–Ω—É—è —Ö—É–∫–∏ –º–æ–¥–µ–ª–∏
    await db.sequelize.query(
      'UPDATE users SET password = ? WHERE email = ?',
      {
        replacements: [correctHash, 'admin@wekey.tools'],
        type: db.sequelize.QueryTypes.UPDATE
      }
    );

    console.log('‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const admin = await db.User.findOne({
      where: { email: 'admin@wekey.tools' }
    });

    const finalCheck = await bcrypt.compare(correctPassword, admin.password);
    console.log('üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:', finalCheck);

    if (finalCheck) {
      console.log('üéâ –ü–∞—Ä–æ–ª—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ª–æ–≥–∏–Ω–∏—Ç—å—Å—è.');
    } else {
      console.log('‚ùå –ß—Ç–æ-—Ç–æ –≤—Å—ë –µ—â—ë –Ω–µ —Ç–∞–∫...');
    }

    await db.sequelize.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

fixPassword();
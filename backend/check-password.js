const db = require('./src/config/database');
const bcrypt = require('bcryptjs');

async function checkPassword() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∞...');
    
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    await db.sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –ù–∞–π—Ç–∏ –∞–¥–º–∏–Ω–∞
    const admin = await db.User.findOne({
      where: { email: 'admin@wekey.tools' }
    });

    if (!admin) {
      console.log('‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return;
    }

    console.log('‚úÖ –ê–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω:');
    console.log('   ID:', admin.id);
    console.log('   Email:', admin.email);
    console.log('   Role:', admin.role);
    console.log('   Password hash:', admin.password.substring(0, 20) + '...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
    const testPassword = 'admin123';
    
    console.log('\nüîë –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å bcrypt');
    const directCheck = await bcrypt.compare(testPassword, admin.password);
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', directCheck);

    console.log('\nüîë –¢–µ—Å—Ç 2: –ß–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –º–æ–¥–µ–ª–∏');
    const modelCheck = await admin.checkPassword(testPassword);
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', modelCheck);

    console.log('\nüîë –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ö–µ—à–∞');
    const newHash = await bcrypt.hash(testPassword, 12);
    const newCheck = await bcrypt.compare(testPassword, newHash);
    console.log('   –ù–æ–≤—ã–π —Ö–µ—à —Ä–∞–±–æ—Ç–∞–µ—Ç:', newCheck);

    if (!directCheck) {
      console.log('\nüîß –ü–∞—Ä–æ–ª—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ö–µ—à...');
      const correctHash = await bcrypt.hash(testPassword, 12);
      
      await admin.update({ password: correctHash });
      console.log('‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω');
      
      // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
      const finalCheck = await admin.checkPassword(testPassword);
      console.log('üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:', finalCheck);
    }

    await db.sequelize.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

checkPassword();
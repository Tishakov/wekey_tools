import React, { useState, useEffect } from 'react';
import './EmojiTool.css';
import '../styles/tool-pages.css';
import { EmojiImage } from '../utils/emojiUtils';
import { Link } from 'react-router-dom';
import { statsService } from '../utils/statsService';
import { emojiDatabase } from '../data/emoji';

const EmojiTool: React.FC = () => {
    const [text, setText] = useState('');
    const [searchQuery, setSearchQuery] = useState('');
    const [copied, setCopied] = useState(false);
    const [launchCount, setLaunchCount] = useState(0);
    const [selectedCategory, setSelectedCategory] = useState<string>('all');

    // –û–±–Ω–æ–≤–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–µ
    const categories = [
        { id: 'all', name: '–í—Å–µ', icon: 'üòÄ' },
        { id: 'faces', name: '–õ–∏—Ü–∞', icon: 'üòÄ' },
        { id: 'hearts', name: '–°–µ—Ä–¥—Ü–∞', icon: '‚ù§Ô∏è' },
        { id: 'animals', name: '–ñ–∏–≤–æ—Ç–Ω—ã–µ', icon: 'üê∂' },
        { id: 'food', name: '–ï–¥–∞', icon: 'üçé' },
        { id: 'nature', name: '–ü—Ä–∏—Ä–æ–¥–∞', icon: 'üåü' },
        { id: 'objects', name: '–û–±—ä–µ–∫—Ç—ã', icon: 'üéâ' },
        { id: 'travel', name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', icon: '‚úàÔ∏è' },
        { id: 'activities', name: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', icon: '‚öΩ' },
        { id: 'flags', name: '–§–ª–∞–≥–∏', icon: 'üèÅ' },
        { id: 'tech', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', icon: 'üì±' },
        { id: 'clothes', name: '–û–¥–µ–∂–¥–∞', icon: 'üëï' },
        { id: 'jobs', name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏', icon: 'üë©‚Äçüíª' },
        { id: 'symbols', name: '–°–∏–º–≤–æ–ª—ã', icon: '‚≠ê' },
        { id: 'gestures', name: '–ñ–µ—Å—Ç—ã', icon: 'üëç' },
        { id: 'music', name: '–ú—É–∑—ã–∫–∞', icon: 'üéµ' },
        { id: 'weather', name: '–ü–æ–≥–æ–¥–∞', icon: '‚òÄÔ∏è' },
        { id: 'education', name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', icon: 'üìö' },
        { id: 'transport', name: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', icon: 'üöó' },
        { id: 'medicine', name: '–ú–µ–¥–∏—Ü–∏–Ω–∞', icon: 'üíä' }
    ];

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    useEffect(() => {
        statsService.incrementLaunchCount('emoji');
        const count = statsService.getLaunchCount('emoji');
        setLaunchCount(count);
    }, []);

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è emoji –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const filteredEmojis = emojiDatabase.filter(item => {
        // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if (selectedCategory !== 'all' && item.category !== selectedCategory) {
            return false;
        }
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫—É
        if (!searchQuery) return true;
        
        const query = searchQuery.toLowerCase();
        return item.keywords.some(keyword => 
            keyword.toLowerCase().includes(query)
        );
    });

    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º
    const insertEmoji = (emoji: string) => {
        setText(prev => prev + emoji);
    };

    const clearText = () => {
        setText('');
    };

    const copyText = async () => {
        try {
            await navigator.clipboard.writeText(text);
            setCopied(true);
            setTimeout(() => setCopied(false), 2000);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        }
    };

    const pasteText = async () => {
        try {
            const clipboardText = await navigator.clipboard.readText();
            setText(clipboardText);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏:', error);
        }
    };

    return (
        <div className="emoji-tool">
            {/* Header-–æ—Å—Ç—Ä–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ */}
            <div className="tool-header-island">
                <Link to="/" className="back-button">
                    <img src="/icons/arrow_left.svg" alt="" />
                    –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
                </Link>
                <h1 className="tool-title">–≠–º–æ–¥–∑–∏</h1>
                <div className="tool-header-buttons">
                    <button className="tool-header-btn counter-btn" title="–°—á–µ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–æ–≤">
                        <img src="/icons/rocket.svg" alt="" />
                        <span className="counter">{launchCount}</span>
                    </button>
                    <button className="tool-header-btn icon-only" title="–ü–æ–¥—Å–∫–∞–∑–∫–∏">
                        <img src="/icons/lamp.svg" alt="" />
                    </button>
                    <button className="tool-header-btn icon-only" title="–°–∫—Ä–∏–Ω—à–æ—Ç">
                        <img src="/icons/camera.svg" alt="" />
                    </button>
                </div>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–±–æ—á–∞—è –æ–±–ª–∞—Å—Ç—å */}
            <div className="main-workspace">
                {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ä–µ–¥–∞–∫—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞ */}
                <div className="emoji-text-editor">
                    <div className="text-editor-header">
                        <h3>–†–µ–¥–∞–∫—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞</h3>
                        <div className="text-editor-actions">
                            <button 
                                onClick={copyText} 
                                className={`action-btn copy ${copied ? 'copied' : ''}`}
                                title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç"
                            >
                                {copied ? '‚úì' : 'üìã'}
                            </button>
                            <button 
                                onClick={pasteText} 
                                className="action-btn paste"
                                title="–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞"
                            >
                                üìÑ
                            </button>
                            <button 
                                onClick={clearText} 
                                className="action-btn clear"
                                title="–û—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç"
                            >
                                üóëÔ∏è
                            </button>
                        </div>
                    </div>
                    <textarea
                        value={text}
                        onChange={(e) => setText(e.target.value)}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —ç–º–æ–¥–∑–∏..."
                        className="emoji-textarea"
                    />
                    <div className="text-stats">
                        –°–∏–º–≤–æ–ª–æ–≤: {text.length}
                    </div>
                </div>

                {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —ç–º–æ–¥–∑–∏ */}
                <div className="emoji-library">
                    <div className="emoji-library-header">
                        <h3>–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —ç–º–æ–¥–∑–∏</h3>
                        
                        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
                        <div className="emoji-categories">
                            {categories.map(category => (
                                <button
                                    key={category.id}
                                    className={`category-btn ${selectedCategory === category.id ? 'active' : ''}`}
                                    onClick={() => setSelectedCategory(category.id)}
                                    title={category.name}
                                >
                                    <EmojiImage emoji={category.icon} size={20} />
                                    <span>{category.name}</span>
                                </button>
                            ))}
                        </div>
                        
                        <div className="emoji-search-container">
                            <input
                                type="text"
                                value={searchQuery}
                                onChange={(e) => setSearchQuery(e.target.value)}
                                placeholder="–ü–æ–∏—Å–∫ —ç–º–æ–¥–∑–∏..."
                                className="emoji-search"
                            />
                        </div>
                    </div>

                    {/* –í—Å–µ —ç–º–æ–¥–∑–∏ */}
                    <div className="emoji-all-section">
                        <h4>–í—Å–µ —ç–º–æ–¥–∑–∏ ({filteredEmojis.length})</h4>
                        <div className="emoji-grid">
                            {filteredEmojis.map((item, index) => (
                                <div
                                    key={index}
                                    className="emoji-item"
                                    onClick={() => insertEmoji(item.emoji)}
                                    title={`${item.emoji} - ${item.keywords.slice(0, 3).join(', ')}`}
                                >
                                    <EmojiImage emoji={item.emoji} size={24} />
                                </div>
                            ))}
                        </div>
                    </div>

                    {filteredEmojis.length === 0 && searchQuery && (
                        <div className="no-results">
                            –≠–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default EmojiTool;

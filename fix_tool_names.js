#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç h1 —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã

const fs = require('fs');

// –ú–∞–ø–ø–∏–Ω–≥ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ h1 –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü
const correctNames = {
  // –ò–∑ –∞—É–¥–∏—Ç–∞ - h1 –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü (–∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã)
  'add-symbol': '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞',
  'case-changer': '–ò–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞',
  'char-counter': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤', 
  'cross-analytics': '–°–∫–≤–æ–∑–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
  'duplicate-finder': '–ü–æ–∏—Å–∫ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤',
  'remove-duplicates': '–£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤', // duplicateremoval
  'remove-empty-lines': '–£–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫', // emptylinesremoval
  'emoji': '–≠–º–æ–¥–∑–∏',
  'find-replace': '–ù–∞–π—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å',
  'match-types': '–¢–∏–ø—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è', // matchtypes
  'minus-words': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∏–Ω—É—Å-—Å–ª–æ–≤', // minuswords
  'number-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª',
  'password-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π',
  'remove-line-breaks': '–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤', // removelinebreaks
  'spaces-to-paragraphs': '–ü—Ä–æ–±–µ–ª—ã –Ω–∞ –∞–±–∑–∞—Ü—ã', // spacestoparagraphs
  'synonym-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∏–Ω–æ–Ω–∏–º–æ–≤',
  'text-by-columns': '–¢–µ–∫—Å—Ç –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º', // textbycolumns
  'text-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞',
  'text-optimizer': '–û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä —Ç–µ–∫—Å—Ç–∞', // textoptimizer
  'text-sorting': '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–æ–≤ –∏ —Å—Ç—Ä–æ–∫', // textsorting
  'text-to-html': '–¢–µ–∫—Å—Ç –≤ HTML', // texttohtml
  'transliteration': '–¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è',
  'utm-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä UTM-–º–µ—Ç–æ–∫', // utmgenerator
  'word-declension': '–°–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤', // wordinflection
  'word-gluing': '–°–∫–ª–µ–π–∫–∞ —Å–ª–æ–≤', // wordgluing
  'word-mixer': '–ú–∏–∫—Å–∞—Ü–∏—è —Å–ª–æ–≤' // wordmixer
};

// –ê–Ω–≥–ª–∏–π—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã (–ª–æ–≥–∏—á–µ—Å–∫–∏–µ)
const englishNames = {
  'add-symbol': 'Add Symbol',
  'case-changer': 'Case Changer',
  'char-counter': 'Character Counter',
  'cross-analytics': 'Cross Analytics',
  'duplicate-finder': 'Duplicate Finder',
  'remove-duplicates': 'Remove Duplicates',
  'remove-empty-lines': 'Remove Empty Lines',
  'emoji': 'Emoji',
  'find-replace': 'Find & Replace',
  'match-types': 'Match Types',
  'minus-words': 'Minus Words',
  'number-generator': 'Number Generator',
  'password-generator': 'Password Generator',
  'remove-line-breaks': 'Remove Line Breaks',
  'spaces-to-paragraphs': 'Spaces to Paragraphs',
  'synonym-generator': 'Synonym Generator',
  'text-by-columns': 'Text by Columns',
  'text-generator': 'Text Generator',
  'text-optimizer': 'Text Optimizer',
  'text-sorting': 'Text Sorting',
  'text-to-html': 'Text to HTML',
  'transliteration': 'Transliteration',
  'utm-generator': 'UTM Generator',
  'word-declension': 'Word Declension',
  'word-gluing': 'Word Gluing',
  'word-mixer': 'Word Mixer'
};

// –£–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã (–ª–æ–≥–∏—á–µ—Å–∫–∏–µ)
const ukrainianNames = {
  'add-symbol': '–î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–∏–º–≤–æ–ª—É',
  'case-changer': '–ó–º—ñ–Ω–∞ —Ä–µ–≥—ñ—Å—Ç—Ä—É',
  'char-counter': '–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∏–º–≤–æ–ª—ñ–≤',
  'cross-analytics': '–ù–∞—Å–∫—Ä—ñ–∑–Ω–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞',
  'duplicate-finder': '–ü–æ—à—É–∫ –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤',
  'remove-duplicates': '–í–∏–¥–∞–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤',
  'remove-empty-lines': '–í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—ñ—Ö —Ä—è–¥–∫—ñ–≤',
  'emoji': '–ï–º–æ–¥–∑—ñ',
  'find-replace': '–ó–Ω–∞–π—Ç–∏ —Ç–∞ –∑–∞–º—ñ–Ω–∏—Ç–∏',
  'match-types': '–¢–∏–ø–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç–µ–π',
  'minus-words': '–û–±—Ä–æ–±–∫–∞ –º—ñ–Ω—É—Å-—Å–ª—ñ–≤',
  'number-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∏—Å–µ–ª',
  'password-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª—ñ–≤',
  'remove-line-breaks': '–í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–Ω–æ—Å—ñ–≤',
  'spaces-to-paragraphs': '–ü—Ä–æ–±—ñ–ª–∏ –Ω–∞ –∞–±–∑–∞—Ü–∏',
  'synonym-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∏–Ω–æ–Ω—ñ–º—ñ–≤',
  'text-by-columns': '–¢–µ–∫—Å—Ç –ø–æ –∫–æ–ª–æ–Ω–∫–∞—Ö',
  'text-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ–∫—Å—Ç—É',
  'text-optimizer': '–û–ø—Ç–∏–º—ñ–∑–∞—Ç–æ—Ä —Ç–µ–∫—Å—Ç—É',
  'text-sorting': '–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Å–ª—ñ–≤ —Ç–∞ —Ä—è–¥–∫—ñ–≤',
  'text-to-html': '–¢–µ–∫—Å—Ç –≤ HTML',
  'transliteration': '–¢—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—è',
  'utm-generator': '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä UTM-–º—ñ—Ç–æ–∫',
  'word-declension': '–í—ñ–¥–º—ñ–Ω—é–≤–∞–Ω–Ω—è —Å–ª—ñ–≤',
  'word-gluing': '–°–∫–ª–µ—é–≤–∞–Ω–Ω—è —Å–ª—ñ–≤',
  'word-mixer': '–ú—ñ–∫—Å—É–≤–∞–Ω–Ω—è —Å–ª—ñ–≤'
};

function fixTranslations() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã...\n');
  
  const files = [
    { path: './frontend/src/i18n/locales/ru.json', names: correctNames, lang: 'ru' },
    { path: './frontend/src/i18n/locales/en.json', names: englishNames, lang: 'en' },
    { path: './frontend/src/i18n/locales/uk.json', names: ukrainianNames, lang: 'uk' }
  ];
  
  files.forEach(({ path, names, lang }) => {
    if (!fs.existsSync(path)) {
      console.log(`‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${path}`);
      return;
    }
    
    console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${lang.toUpperCase()}...`);
    
    const content = JSON.parse(fs.readFileSync(path, 'utf8'));
    let changesMade = 0;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    if (content.tools && content.tools.names) {
      for (const [toolId, correctName] of Object.entries(names)) {
        if (content.tools.names[toolId] !== correctName) {
          const oldName = content.tools.names[toolId] || '‚ùå –ù–ï–¢';
          content.tools.names[toolId] = correctName;
          console.log(`  ‚úèÔ∏è ${toolId}: "${oldName}" ‚Üí "${correctName}"`);
          changesMade++;
        }
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º
    fs.writeFileSync(path, JSON.stringify(content, null, 2), 'utf8');
    console.log(`‚úÖ ${lang.toUpperCase()}: ${changesMade} –∏–∑–º–µ–Ω–µ–Ω–∏–π\n`);
  });
}

function fixToolsConfig() {
  console.log('‚öôÔ∏è –ò—Å–ø—Ä–∞–≤–ª—è–µ–º toolsConfig.ts...\n');
  
  const configPath = './frontend/src/utils/toolsConfig.ts';
  if (!fs.existsSync(configPath)) {
    console.log('‚ö†Ô∏è toolsConfig.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  let content = fs.readFileSync(configPath, 'utf8');
  let changesMade = 0;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º title –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
  for (const [toolId, correctName] of Object.entries(correctNames)) {
    const regex = new RegExp(`(id: '${toolId}',\\s*title: ')([^']+)(')`, 'g');
    
    content = content.replace(regex, (match, p1, currentTitle, p3) => {
      if (currentTitle !== correctName) {
        console.log(`  ‚úèÔ∏è ${toolId}: "${currentTitle}" ‚Üí "${correctName}"`);
        changesMade++;
        return p1 + correctName + p3;
      }
      return match;
    });
  }
  
  fs.writeFileSync(configPath, content, 'utf8');
  console.log(`‚úÖ toolsConfig.ts: ${changesMade} –∏–∑–º–µ–Ω–µ–Ω–∏–π\n`);
}

function fixToolsRegistry() {
  console.log('üìã –ò—Å–ø—Ä–∞–≤–ª—è–µ–º toolsRegistry.ts...\n');
  
  const registryPath = './frontend/src/utils/toolsRegistry.ts';
  if (!fs.existsSync(registryPath)) {
    console.log('‚ö†Ô∏è toolsRegistry.ts –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  let content = fs.readFileSync(registryPath, 'utf8');
  let changesMade = 0;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º name –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
  for (const [toolId, correctName] of Object.entries(correctNames)) {
    const regex = new RegExp(`('${toolId}':\\s*{[^}]*name:\\s*')([^']+)(')`, 'g');
    
    content = content.replace(regex, (match, p1, currentName, p3) => {
      if (currentName !== correctName) {
        console.log(`  ‚úèÔ∏è ${toolId}: "${currentName}" ‚Üí "${correctName}"`);
        changesMade++;
        return p1 + correctName + p3;
      }
      return match;
    });
  }
  
  fs.writeFileSync(registryPath, content, 'utf8');
  console.log(`‚úÖ toolsRegistry.ts: ${changesMade} –∏–∑–º–µ–Ω–µ–Ω–∏–π\n`);
}

function main() {
  console.log('üöÄ –ì–õ–û–ë–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–ô –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í\n');
  console.log('üìÑ –ò—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã: h1 –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤\n');
  
  fixTranslations();
  fixToolsConfig();
  fixToolsRegistry();
  
  console.log('üéâ –í—Å–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
  console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞');
}

if (require.main === module) {
  main();
}

module.exports = { correctNames, englishNames, ukrainianNames };
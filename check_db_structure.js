const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'backend', 'database.sqlite');
const db = new sqlite3.Database(dbPath);

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

// –ü—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ newsletters
db.get(`SELECT name FROM sqlite_master WHERE type='table' AND name='newsletters'`, (err, row) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã:', err.message);
    return;
  }

  if (!row) {
    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ newsletters –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
    
    // –ü–æ–∫–∞–∂–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    db.all(`SELECT name FROM sqlite_master WHERE type='table'`, (err, tables) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü:', err.message);
        return;
      }
      
      console.log('üìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:');
      tables.forEach(table => {
        console.log(`  - ${table.name}`);
      });
      
      db.close();
    });
    
    return;
  }

  console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ newsletters —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  
  // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ
  db.all(`SELECT id, title, status, created_at, updated_at FROM newsletters ORDER BY created_at DESC`, (err, rows) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', err.message);
      return;
    }

    if (rows.length === 0) {
      console.log('üìù –í —Ç–∞–±–ª–∏—Ü–µ newsletters –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.');
    } else {
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${rows.length} —Ä–∞—Å—Å—ã–ª–æ–∫:\n`);
      
      rows.forEach((row, index) => {
        console.log(`${index + 1}. ID: ${row.id}`);
        console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${row.title}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${row.status}`);
        console.log(`   –°–æ–∑–¥–∞–Ω–æ: ${row.created_at}`);
        console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${row.updated_at}`);
        console.log('');
      });
    }

    db.close((err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
      } else {
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.');
      }
    });
  });
});
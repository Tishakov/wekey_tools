const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'backend', 'database.sqlite');
const db = new sqlite3.Database(dbPath);

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã newsletters...\n');

// –ü–æ–ª—É—á–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
db.all(`PRAGMA table_info(newsletters)`, (err, columns) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã:', err.message);
    return;
  }

  console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã newsletters:');
  columns.forEach(col => {
    console.log(`  - ${col.name} (${col.type}) ${col.notnull ? 'NOT NULL' : ''} ${col.pk ? 'PRIMARY KEY' : ''}`);
  });
  
  console.log('\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ...\n');
  
  // –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∏–º –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫
  db.all(`SELECT * FROM newsletters ORDER BY rowid DESC LIMIT 10`, (err, rows) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:', err.message);
      return;
    }

    if (rows.length === 0) {
      console.log('üìù –í —Ç–∞–±–ª–∏—Ü–µ newsletters –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.');
    } else {
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${rows.length} —Ä–∞—Å—Å—ã–ª–æ–∫:\n`);
      
      rows.forEach((row, index) => {
        console.log(`${index + 1}. –ó–∞–ø–∏—Å—å:`, JSON.stringify(row, null, 2));
        console.log('');
      });
    }

    db.close((err) => {
      if (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err);
      } else {
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.');
      }
    });
  });
});